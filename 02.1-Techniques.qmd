# Techniques {#sec-05-Techniques}

- Data collection
- Feature engineering
- Model selection

Collecting data to use in a research analysis involves a selection of sources and methods to use for optimizing computational time when downloading and reading the files.

Once data is set and ready to use a further step is required to make the data suitable for the selected model.

In this chapter, an overview of different method of data loading and featuring selection is provided before to get into selecting the best model to use.

The source of data is an important variable. Generally, data can be downloaded by using an API (application programming interface) which allow the user to get access to data directly from source, with the use of specified back-end computations. There are alternatives at using an API; data can be obtained by downloading it directly into the computer, or loaded through library packages.

Usually, available files are provided under various forms such as delimited type of files, .csv, .xls, .json, and other types.

Here is an example of how to use an API for downloading a file directly onto your computer.
```{r}
#| eval: false
library(httr)
url <- ""
httr::GET(url = url)
```

Once data is on your computer available and ready to use, the next step is to have a look at it and decide whether to perform some adjustment to the data to make it suitable for your model.

This step includes:

- data manipulation/wrangling 
- featuring engineering
- exploratory data analysis

Let's use the `{HistData}` package for an example on William Farr's Data on `Cholera` in London, 1849. This set of data contains information about the number of deaths due to Cholera in specific districts, the population density, the water provider and other variables. 

This is a type of dataset which can be considered ready to use for some type of models such as linear regression models, but it would require some adjustments if a Bayesian approach is desired.
```{r}
#| message: false
#| warning: false
library(tidyverse)
library(HistData)
Cholera <- HistData::Cholera
Cholera%>%head
```

If we are interested in the evolution of mortality due to Cholera. We might want to look at the regional level, how the annual deaths - all causes (`annual_deaths`), the death's rate per 10,000 inhabitants (`cholera_drate`), or  is distributed.
```{r}
data <- Cholera%>%
  select(region,cholera_drate,contains("death",ignore.case=T))

data %>%
  head
```

```{r}
data %>%
  select(-region)%>%
  scale()%>%
  bind_cols(region=data$region)%>%
  pivot_longer(cols = 1:3,names_to = "type",values_to = "values")%>%
  ggplot(aes(values))+
  geom_density()+
  facet_wrap(~type)
```


